{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c1692014",
   "metadata": {},
   "source": [
    "## CS115 Introduction to Programming in Python \n",
    "### Lab 09 \n",
    "\n",
    "*Lab Objectives:*  Numpy.\n",
    "\n",
    "*Instructions:* \n",
    "\n",
    "- In this lab, you will use the Jupyter Notebook.\n",
    "\n",
    "- Complete the questions in the spaces provided and upload the solution to Moodle when finished.\n",
    "\n",
    "*NOTE:* For the following questions, you should not use loops or if statements!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6160a4fe",
   "metadata": {},
   "source": [
    "1) Download the files *country_data.csv*, *01_indicator.csv* and *02_indicator.csv* from Moodle. The files are tab delimited, and the data in each file is parallel.  For example, row 1 in the indicators files corresponds to the country in the country file.  Review the data in each file before proceeding.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ade6be7b",
   "metadata": {},
   "source": [
    "2) Download this file *lab9.ipynb* as *yourname_Lab09.ipynb* that does the following: "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d1871b2",
   "metadata": {},
   "source": [
    "a. First import numpy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a4737c68",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dbe899d3",
   "metadata": {},
   "source": [
    "b. import the data from the files into 3 separate numpy arrays."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed30a7d5",
   "metadata": {},
   "source": [
    "- country stores country and region data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "52e91fec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[['South Asia' 'Afghanistan']\n",
      " ['Central and Eastern Europe' 'Albania']\n",
      " ['Middle East and North Africa' 'Algeria']\n",
      " ['Latin America and Caribbean' 'Argentina']\n",
      " ['Commonwealth of Independent States' 'Armenia']\n",
      " ['North America and ANZ' 'Australia']\n",
      " ['Western Europe' 'Austria']\n",
      " ['Commonwealth of Independent States' 'Azerbaijan']\n",
      " ['Middle East and North Africa' 'Bahrain']\n",
      " ['South Asia' 'Bangladesh']\n",
      " ['Commonwealth of Independent States' 'Belarus']\n",
      " ['Western Europe' 'Belgium']\n",
      " ['Sub-Saharan Africa' 'Benin']\n",
      " ['Latin America and Caribbean' 'Bolivia']\n",
      " ['Central and Eastern Europe' 'Bosnia and Herzegovina']\n",
      " ['Sub-Saharan Africa' 'Botswana']\n",
      " ['Latin America and Caribbean' 'Brazil']\n",
      " ['Central and Eastern Europe' 'Bulgaria']\n",
      " ['Sub-Saharan Africa' 'Burkina Faso']\n",
      " ['Sub-Saharan Africa' 'Burundi']\n",
      " ['Southeast Asia' 'Cambodia']\n",
      " ['Sub-Saharan Africa' 'Cameroon']\n",
      " ['North America and ANZ' 'Canada']\n",
      " ['Sub-Saharan Africa' 'Chad']\n",
      " ['Latin America and Caribbean' 'Chile']\n",
      " ['East Asia' 'China']\n",
      " ['Latin America and Caribbean' 'Colombia']\n",
      " ['Sub-Saharan Africa' 'Comoros']\n",
      " ['Sub-Saharan Africa' 'Congo (Brazzaville)']\n",
      " ['Latin America and Caribbean' 'Costa Rica']\n",
      " ['Central and Eastern Europe' 'Croatia']\n",
      " ['Western Europe' 'Cyprus']\n",
      " ['Central and Eastern Europe' 'Czech Republic']\n",
      " ['Western Europe' 'Denmark']\n",
      " ['Latin America and Caribbean' 'Dominican Republic']\n",
      " ['Latin America and Caribbean' 'Ecuador']\n",
      " ['Middle East and North Africa' 'Egypt']\n",
      " ['Latin America and Caribbean' 'El Salvador']\n",
      " ['Central and Eastern Europe' 'Estonia']\n",
      " ['Sub-Saharan Africa' 'Ethiopia']\n",
      " ['Western Europe' 'Finland']\n",
      " ['Western Europe' 'France']\n",
      " ['Sub-Saharan Africa' 'Gabon']\n",
      " ['Sub-Saharan Africa' 'Gambia']\n",
      " ['Commonwealth of Independent States' 'Georgia']\n",
      " ['Western Europe' 'Germany']\n",
      " ['Sub-Saharan Africa' 'Ghana']\n",
      " ['Western Europe' 'Greece']\n",
      " ['Latin America and Caribbean' 'Guatemala']\n",
      " ['Sub-Saharan Africa' 'Guinea']\n",
      " ['Latin America and Caribbean' 'Haiti']\n",
      " ['Latin America and Caribbean' 'Honduras']\n",
      " ['East Asia' 'Hong Kong S.A.R. of China']\n",
      " ['Central and Eastern Europe' 'Hungary']\n",
      " ['Western Europe' 'Iceland']\n",
      " ['South Asia' 'India']\n",
      " ['Southeast Asia' 'Indonesia']\n",
      " ['Middle East and North Africa' 'Iran']\n",
      " ['Middle East and North Africa' 'Iraq']\n",
      " ['Western Europe' 'Ireland']\n",
      " ['Middle East and North Africa' 'Israel']\n",
      " ['Western Europe' 'Italy']\n",
      " ['Sub-Saharan Africa' 'Ivory Coast']\n",
      " ['Latin America and Caribbean' 'Jamaica']\n",
      " ['East Asia' 'Japan']\n",
      " ['Middle East and North Africa' 'Jordan']\n",
      " ['Commonwealth of Independent States' 'Kazakhstan']\n",
      " ['Sub-Saharan Africa' 'Kenya']\n",
      " ['Central and Eastern Europe' 'Kosovo']\n",
      " ['Middle East and North Africa' 'Kuwait']\n",
      " ['Commonwealth of Independent States' 'Kyrgyzstan']\n",
      " ['Southeast Asia' 'Laos']\n",
      " ['Central and Eastern Europe' 'Latvia']\n",
      " ['Middle East and North Africa' 'Lebanon']\n",
      " ['Sub-Saharan Africa' 'Lesotho']\n",
      " ['Sub-Saharan Africa' 'Liberia']\n",
      " ['Middle East and North Africa' 'Libya']\n",
      " ['Central and Eastern Europe' 'Lithuania']\n",
      " ['Western Europe' 'Luxembourg']\n",
      " ['Sub-Saharan Africa' 'Madagascar']\n",
      " ['Sub-Saharan Africa' 'Malawi']\n",
      " ['Southeast Asia' 'Malaysia']\n",
      " ['South Asia' 'Maldives']\n",
      " ['Sub-Saharan Africa' 'Mali']\n",
      " ['Western Europe' 'Malta']\n",
      " ['Sub-Saharan Africa' 'Mauritania']\n",
      " ['Sub-Saharan Africa' 'Mauritius']\n",
      " ['Latin America and Caribbean' 'Mexico']\n",
      " ['Commonwealth of Independent States' 'Moldova']\n",
      " ['East Asia' 'Mongolia']\n",
      " ['Central and Eastern Europe' 'Montenegro']\n",
      " ['Middle East and North Africa' 'Morocco']\n",
      " ['Sub-Saharan Africa' 'Mozambique']\n",
      " ['Southeast Asia' 'Myanmar']\n",
      " ['Sub-Saharan Africa' 'Namibia']\n",
      " ['South Asia' 'Nepal']\n",
      " ['Western Europe' 'Netherlands']\n",
      " ['North America and ANZ' 'New Zealand']\n",
      " ['Latin America and Caribbean' 'Nicaragua']\n",
      " ['Sub-Saharan Africa' 'Niger']\n",
      " ['Sub-Saharan Africa' 'Nigeria']\n",
      " ['Western Europe' 'North Cyprus']\n",
      " ['Central and Eastern Europe' 'North Macedonia']\n",
      " ['Western Europe' 'Norway']\n",
      " ['South Asia' 'Pakistan']\n",
      " ['Middle East and North Africa' 'Palestinian Territories']\n",
      " ['Latin America and Caribbean' 'Panama']\n",
      " ['Latin America and Caribbean' 'Paraguay']\n",
      " ['Latin America and Caribbean' 'Peru']\n",
      " ['Southeast Asia' 'Philippines']\n",
      " ['Central and Eastern Europe' 'Poland']\n",
      " ['Western Europe' 'Portugal']\n",
      " ['Central and Eastern Europe' 'Romania']\n",
      " ['Commonwealth of Independent States' 'Russia']\n",
      " ['Sub-Saharan Africa' 'Rwanda']\n",
      " ['Middle East and North Africa' 'Saudi Arabia']\n",
      " ['Sub-Saharan Africa' 'Senegal']\n",
      " ['Central and Eastern Europe' 'Serbia']\n",
      " ['Sub-Saharan Africa' 'Sierra Leone']\n",
      " ['Southeast Asia' 'Singapore']\n",
      " ['Central and Eastern Europe' 'Slovakia']\n",
      " ['Central and Eastern Europe' 'Slovenia']\n",
      " ['Sub-Saharan Africa' 'South Africa']\n",
      " ['East Asia' 'South Korea']\n",
      " ['Western Europe' 'Spain']\n",
      " ['South Asia' 'Sri Lanka']\n",
      " ['Sub-Saharan Africa' 'Swaziland']\n",
      " ['Western Europe' 'Sweden']\n",
      " ['Western Europe' 'Switzerland']\n",
      " ['East Asia' 'Taiwan Province of China']\n",
      " ['Commonwealth of Independent States' 'Tajikistan']\n",
      " ['Sub-Saharan Africa' 'Tanzania']\n",
      " ['Southeast Asia' 'Thailand']\n",
      " ['Sub-Saharan Africa' 'Togo']\n",
      " ['Middle East and North Africa' 'Tunisia']\n",
      " ['Middle East and North Africa' 'Turkey']\n",
      " ['Commonwealth of Independent States' 'Turkmenistan']\n",
      " ['Sub-Saharan Africa' 'Uganda']\n",
      " ['Commonwealth of Independent States' 'Ukraine']\n",
      " ['Middle East and North Africa' 'United Arab Emirates']\n",
      " ['Western Europe' 'United Kingdom']\n",
      " ['North America and ANZ' 'United States']\n",
      " ['Latin America and Caribbean' 'Uruguay']\n",
      " ['Commonwealth of Independent States' 'Uzbekistan']\n",
      " ['Latin America and Caribbean' 'Venezuela']\n",
      " ['Southeast Asia' 'Vietnam']\n",
      " ['Middle East and North Africa' 'Yemen']\n",
      " ['Sub-Saharan Africa' 'Zambia']\n",
      " ['Sub-Saharan Africa' 'Zimbabwe']]\n"
     ]
    }
   ],
   "source": [
    "country = np.loadtxt(\"country_data.txt\",skiprows= 1 ,delimiter = \"\\t\",dtype = \"str\")\n",
    "print(countries)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "da78936f",
   "metadata": {},
   "source": [
    "- ind_01 stores the indicators from the 01_indicator_one file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "32713ab2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[['10.556']\n",
      " ['10.529']\n",
      " ['9.318']\n",
      " ['10.369']\n",
      " ['10.499']\n",
      " ['10.481']\n",
      " ['10.382']\n",
      " ['10.284']\n",
      " ['9.787']\n",
      " ['10.315']\n",
      " ['10.358']\n",
      " ['10.217']\n",
      " ['9.59']\n",
      " ['9.94']\n",
      " ['10.016']\n",
      " ['9.52']\n",
      " ['9.693']\n",
      " ['8.836']\n",
      " ['10.155']\n",
      " ['9.454']\n",
      " ['8.538']\n",
      " ['9.853']\n",
      " ['10.189']\n",
      " ['8.091']\n",
      " ['9.487']\n",
      " ['9.569']\n",
      " ['9.629']\n",
      " ['9.585']\n",
      " ['9.436']\n",
      " ['10.871']\n",
      " ['10.611']\n",
      " ['10.651']\n",
      " ['9.4']\n",
      " ['11']\n",
      " ['9.673']\n",
      " ['9.88']\n",
      " ['9.053']\n",
      " ['9.966']\n",
      " ['9.577']\n",
      " ['9.859']\n",
      " ['9.186']\n",
      " ['10.35']\n",
      " ['10.071']\n",
      " ['9.054']\n",
      " ['9.557']\n",
      " ['8.62']\n",
      " ['9.962']\n",
      " ['8.648']\n",
      " ['9.458']\n",
      " ['9.313']\n",
      " ['9.046']\n",
      " ['9.448']\n",
      " ['9.802']\n",
      " ['9.073']\n",
      " ['7.477']\n",
      " ['10.575']\n",
      " ['10.669']\n",
      " ['11.085']\n",
      " ['10.743']\n",
      " ['10.817']\n",
      " ['9.622']\n",
      " ['10.24']\n",
      " ['8.903']\n",
      " ['9.342']\n",
      " ['9.24']\n",
      " ['9.584']\n",
      " ['9.266']\n",
      " ['9.626']\n",
      " ['8.485']\n",
      " ['9.182']\n",
      " ['9.367']\n",
      " ['7.578']\n",
      " ['10.643']\n",
      " ['10.796']\n",
      " ['10.776']\n",
      " ['11.023']\n",
      " ['8.12']\n",
      " ['9.826']\n",
      " ['8.454']\n",
      " ['8.458']\n",
      " ['9.47']\n",
      " ['8.755']\n",
      " ['7.695']\n",
      " ['11.488']\n",
      " ['9.805']\n",
      " ['9.076']\n",
      " ['8.973']\n",
      " ['10.238']\n",
      " ['9.365']\n",
      " ['8.947']\n",
      " ['8.36']\n",
      " ['8.541']\n",
      " ['10.008']\n",
      " ['8.117']\n",
      " ['8.551']\n",
      " ['8.189']\n",
      " ['8.118']\n",
      " ['8.58']\n",
      " ['7.098']\n",
      " ['7.686']\n",
      " ['8.087']\n",
      " ['7.838']\n",
      " ['9.403']\n",
      " ['9.603']\n",
      " ['7.678']\n",
      " ['7.158']\n",
      " ['8.533']\n",
      " ['7.744']\n",
      " ['7.677']\n",
      " ['7.288']\n",
      " ['8.361']\n",
      " ['9.161']\n",
      " ['7.364']\n",
      " ['9.065']\n",
      " ['8.031']\n",
      " ['7.694']\n",
      " ['8.542']\n",
      " ['7.396']\n",
      " ['7.362']\n",
      " ['8.145']\n",
      " ['7.434']\n",
      " ['6.635']\n",
      " ['7.876']\n",
      " ['6.958']\n",
      " ['7.926']\n",
      " ['9.782']\n",
      " ['7.676']\n",
      " ['7.943']\n",
      " ['10.775']\n",
      " ['10.933']\n",
      " ['11.117']\n",
      " ['10.878']\n",
      " ['10.932']\n",
      " ['11.053']\n",
      " ['10.867']\n",
      " ['11.647']\n",
      " ['10.906']\n",
      " ['10.873']\n",
      " ['11.342']\n",
      " ['10.707']\n",
      " ['10.823']\n",
      " ['10.704']\n",
      " ['10.674']\n",
      " ['10.571']\n",
      " ['10.623']\n",
      " ['10.576']\n",
      " ['10.421']\n",
      " ['10.279']\n",
      " ['10.576']]\n"
     ]
    }
   ],
   "source": [
    "ind_02 = np.loadtxt(\"02_indicator.txt\",skiprows= 1 ,delimiter = \"\\t\", dtype=\"str\").reshape(149,1)   \n",
    "print(ind_02)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c52f0ff",
   "metadata": {},
   "source": [
    "- ind_02 stores the indicators from the 02_indicator file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "10d8fc80",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[['0.947' '70.807' '0.858' '-0.208' '0.868']\n",
      " ['0.948' '71.4' '0.949' '-0.101' '0.806']\n",
      " ['0.821' '63.813' '0.869' '0.257' '0.917']\n",
      " ['0.936' '69.201' '0.766' '-0.124' '0.911']\n",
      " ['0.935' '67.906' '0.773' '-0.203' '0.826']\n",
      " ['0.941' '68.8' '0.909' '-0.106' '0.527']\n",
      " ['0.898' '69.702' '0.841' '-0.165' '0.735']\n",
      " ['0.832' '67.355' '0.845' '-0.219' '0.938']\n",
      " ['0.873' '68.6' '0.778' '0.002' '0.835']\n",
      " ['0.927' '67.1' '0.715' '-0.162' '0.8']\n",
      " ['0.943' '68' '0.755' '-0.186' '0.876']\n",
      " ['0.924' '70.799' '0.754' '-0.118' '0.939']\n",
      " ['0.87' '68.098' '0.706' '0.113' '0.931']\n",
      " ['0.858' '68.699' '0.708' '-0.034' '0.812']\n",
      " ['0.931' '67' '0.788' '-0.096' '0.932']\n",
      " ['0.697' '68.999' '0.785' '-0.03' '0.901']\n",
      " ['0.805' '65.474' '0.751' '0.038' '0.905']\n",
      " ['0.918' '65.255' '0.97' '0.311' '0.515']\n",
      " ['0.952' '65.2' '0.853' '-0.069' '0.733']\n",
      " ['0.857' '65.699' '0.822' '-0.079' '0.918']\n",
      " ['0.893' '64.401' '0.935' '0.119' '0.908']\n",
      " ['0.91' '66.253' '0.65' '-0.18' '0.627']\n",
      " ['0.903' '64.703' '0.718' '-0.111' '0.845']\n",
      " ['0.86' '64.281' '0.832' '-0.056' '0.553']\n",
      " ['0.799' '67.055' '0.825' '-0.168' '0.629']\n",
      " ['0.836' '65.656' '0.814' '-0.223' '0.506']\n",
      " ['0.983' '62.409' '0.877' '0.273' '0.888']\n",
      " ['0.671' '64.3' '0.783' '-0.238' '0.655']\n",
      " ['0.888' '64.902' '0.724' '-0.011' '0.924']\n",
      " ['0.898' '69.6' '0.784' '-0.07' '0.721']\n",
      " ['0.884' '75.1' '0.796' '-0.258' '0.638']\n",
      " ['0.799' '73.9' '0.672' '-0.083' '0.727']\n",
      " ['0.935' '62.5' '0.708' '0.116' '0.856']\n",
      " ['0.836' '76.82' '0.717' '0.067' '0.403']\n",
      " ['0.811' '69.593' '0.904' '-0.146' '0.755']\n",
      " ['0.891' '71.4' '0.934' '-0.126' '0.809']\n",
      " ['0.813' '64.958' '0.906' '-0.038' '0.775']\n",
      " ['0.925' '69.1' '0.896' '-0.092' '0.59']\n",
      " ['0.882' '66.601' '0.804' '-0.071' '0.756']\n",
      " ['0.831' '68.597' '0.862' '-0.147' '0.799']\n",
      " ['0.877' '67.5' '0.89' '-0.137' '0.884']\n",
      " ['0.896' '69.652' '0.872' '-0.166' '0.856']\n",
      " ['0.882' '70' '0.742' '-0.044' '0.83']\n",
      " ['0.762' '66.402' '0.888' '-0.11' '0.688']\n",
      " ['0.847' '68.001' '0.837' '-0.135' '0.841']\n",
      " ['0.864' '67.657' '0.836' '0.02' '0.664']\n",
      " ['0.898' '69' '0.828' '-0.182' '0.834']\n",
      " ['0.812' '67.3' '0.857' '0.081' '0.809']\n",
      " ['0.832' '68.25' '0.822' '-0.154' '0.891']\n",
      " ['0.821' '68.8' '0.842' '-0.124' '0.843']\n",
      " ['0.81' '63.901' '0.875' '-0.077' '0.839']\n",
      " ['0.893' '65.9' '0.876' '0.028' '0.882']\n",
      " ['0.853' '66.102' '0.86' '-0.133' '0.714']\n",
      " ['0.861' '66.7' '0.615' '-0.169' '0.827']\n",
      " ['0.54' '55.7' '0.593' '0.422' '0.721']\n",
      " ['0.939' '73.503' '0.8' '0.031' '0.753']\n",
      " ['0.862' '69.495' '0.925' '0.089' '0.722']\n",
      " ['0.844' '67.333' '0.932' '0.074' '0.589']\n",
      " ['0.891' '66.603' '0.877' '-0.149' '0.684']\n",
      " ['0.843' '66.9' '0.867' '-0.104' '0.736']\n",
      " ['0.827' '62.3' '0.771' '-0.087' '0.667']\n",
      " ['0.822' '67.199' '0.576' '-0.139' '0.776']\n",
      " ['0.56' '66.208' '0.774' '-0.236' '0.801']\n",
      " ['0.802' '66.005' '0.48' '-0.067' '0.752']\n",
      " ['0.746' '60.583' '0.63' '-0.053' '0.875']\n",
      " ['0.71' '66.3' '0.608' '0.218' '0.714']\n",
      " ['0.691' '67.201' '0.656' '-0.201' '0.87']\n",
      " ['0.848' '67.355' '0.525' '-0.073' '0.898']\n",
      " ['0.826' '62.25' '0.653' '-0.163' '0.821']\n",
      " ['0.767' '67' '0.755' '-0.167' '0.705']\n",
      " ['0.75' '61.998' '0.749' '-0.182' '0.795']\n",
      " ['0.832' '57.122' '0.602' '-0.147' '0.8']\n",
      " ['0.948' '73.4' '0.929' '0.134' '0.242']\n",
      " ['0.94' '73.9' '0.914' '0.159' '0.442']\n",
      " ['0.926' '73.8' '0.915' '0.089' '0.415']\n",
      " ['0.92' '68.2' '0.837' '0.098' '0.698']\n",
      " ['0.774' '64.233' '0.782' '0.152' '0.727']\n",
      " ['0.913' '70.6' '0.854' '0.024' '0.825']\n",
      " ['0.693' '64.8' '0.877' '-0.041' '0.682']\n",
      " ['0.651' '58.709' '0.726' '0.098' '0.787']\n",
      " ['0.827' '67.299' '0.841' '0.079' '0.863']\n",
      " ['0.603' '60.633' '0.893' '0.089' '0.774']\n",
      " ['0.463' '52.493' '0.382' '-0.102' '0.924']\n",
      " ['0.915' '76.953' '0.927' '-0.018' '0.082']\n",
      " ['0.888' '67.401' '0.884' '0.287' '0.895']\n",
      " ['0.83' '62' '0.917' '-0.097' '0.742']\n",
      " ['0.85' '68.034' '0.94' '-0.098' '0.796']\n",
      " ['0.817' '67.102' '0.895' '0.125' '0.839']\n",
      " ['0.811' '62.236' '0.873' '0.542' '0.867']\n",
      " ['0.728' '58.968' '0.91' '0.123' '0.658']\n",
      " ['0.765' '62' '0.959' '0.034' '0.843']\n",
      " ['0.779' '59.302' '0.876' '0.509' '0.66']\n",
      " ['0.905' '66.701' '0.867' '-0.054' '0.789']\n",
      " ['0.636' '58.221' '0.695' '-0.068' '0.745']\n",
      " ['0.644' '50.114' '0.741' '-0.016' '0.794']\n",
      " ['0.71' '53.515' '0.731' '0.026' '0.848']\n",
      " ['0.71' '59.802' '0.695' '-0.046' '0.801']\n",
      " ['0.727' '57.586' '0.807' '0.123' '0.848']\n",
      " ['0.641' '53.78' '0.806' '0.018' '0.693']\n",
      " ['0.69' '55.16' '0.697' '0.424' '0.746']\n",
      " ['0.489' '54.713' '0.757' '-0.034' '0.661']\n",
      " ['0.639' '55.008' '0.697' '0.095' '0.766']\n",
      " ['0.86' '56.904' '0.749' '-0.067' '0.86']\n",
      " ['0.776' '59.962' '0.731' '-0.2' '0.84']\n",
      " ['0.672' '54.151' '0.695' '-0.009' '0.748']\n",
      " ['0.744' '54.706' '0.882' '0.061' '0.684']\n",
      " ['0.74' '50.102' '0.737' '0.037' '0.878']\n",
      " ['0.724' '51.969' '0.697' '-0.036' '0.827']\n",
      " ['0.781' '56.101' '0.709' '0.122' '0.855']\n",
      " ['0.72' '56.498' '0.735' '0.05' '0.85']\n",
      " ['0.688' '60.704' '0.779' '0.287' '0.825']\n",
      " ['0.818' '56.799' '0.719' '-0.149' '0.847']\n",
      " ['0.619' '48.478' '0.579' '0.041' '0.807']\n",
      " ['0.77' '50.833' '0.647' '-0.185' '0.708']\n",
      " ['0.626' '57.349' '0.548' '0.082' '0.781']\n",
      " ['0.764' '59' '0.752' '0.082' '0.761']\n",
      " ['0.795' '57.161' '0.561' '-0.106' '0.731']\n",
      " ['0.686' '59.305' '0.552' '-0.005' '0.803']\n",
      " ['0.569' '54.914' '0.619' '0.032' '0.772']\n",
      " ['0.708' '55.809' '0.782' '0.061' '0.823']\n",
      " ['0.63' '51.651' '0.717' '0.084' '0.866']\n",
      " ['0.49' '53.4' '0.626' '-0.024' '0.607']\n",
      " ['0.702' '57.999' '0.833' '0.183' '0.577']\n",
      " ['0.537' '57.948' '0.78' '0.038' '0.729']\n",
      " ['0.787' '48.7' '0.715' '-0.131' '0.915']\n",
      " ['0.784' '59.269' '0.824' '-0.246' '0.801']\n",
      " ['0.552' '61.4' '0.897' '0.061' '0.167']\n",
      " ['0.75' '56.201' '0.677' '-0.047' '0.821']\n",
      " ['0.954' '72' '0.949' '-0.098' '0.186']\n",
      " ['0.954' '72.7' '0.946' '0.03' '0.179']\n",
      " ['0.942' '74.4' '0.919' '0.025' '0.292']\n",
      " ['0.983' '73' '0.955' '0.16' '0.673']\n",
      " ['0.942' '72.4' '0.913' '0.175' '0.338']\n",
      " ['0.954' '73.3' '0.96' '0.093' '0.27']\n",
      " ['0.934' '72.7' '0.945' '0.086' '0.237']\n",
      " ['0.908' '72.6' '0.907' '-0.034' '0.386']\n",
      " ['0.934' '73.3' '0.908' '0.042' '0.481']\n",
      " ['0.903' '72.5' '0.875' '0.011' '0.46']\n",
      " ['0.947' '72.4' '0.879' '0.077' '0.363']\n",
      " ['0.934' '72.5' '0.859' '0.233' '0.459']\n",
      " ['0.906' '72.199' '0.783' '-0.153' '0.646']\n",
      " ['0.942' '74' '0.822' '-0.147' '0.571']\n",
      " ['0.931' '72.2' '0.927' '0.133' '0.653']\n",
      " ['0.932' '74.7' '0.761' '-0.081' '0.745']\n",
      " ['0.88' '73.8' '0.693' '-0.084' '0.866']\n",
      " ['0.802' '73.898' '0.763' '-0.015' '0.844']\n",
      " ['0.879' '72.6' '0.892' '-0.244' '0.887']\n",
      " ['0.823' '72.6' '0.582' '-0.288' '0.823']\n",
      " ['0.82' '73.898' '0.795' '0.012' '0.626']]\n"
     ]
    }
   ],
   "source": [
    "ind_01 = np.loadtxt(\"01_indicator.txt\",skiprows= 1 ,delimiter = \"\\t\", dtype=\"str\")\n",
    "print(ind_01)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "194bbdb0",
   "metadata": {},
   "source": [
    "c. Create a new array *ind_data* where the first column is *02_indicator data* and the remaining columns are from *01_indicator*\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "88ba94ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[['10.556' '0.947' '70.807' '0.858' '-0.208' '0.868']\n",
      " ['10.529' '0.948' '71.4' '0.949' '-0.101' '0.806']\n",
      " ['9.318' '0.821' '63.813' '0.869' '0.257' '0.917']\n",
      " ['10.369' '0.936' '69.201' '0.766' '-0.124' '0.911']\n",
      " ['10.499' '0.935' '67.906' '0.773' '-0.203' '0.826']\n",
      " ['10.481' '0.941' '68.8' '0.909' '-0.106' '0.527']\n",
      " ['10.382' '0.898' '69.702' '0.841' '-0.165' '0.735']\n",
      " ['10.284' '0.832' '67.355' '0.845' '-0.219' '0.938']\n",
      " ['9.787' '0.873' '68.6' '0.778' '0.002' '0.835']\n",
      " ['10.315' '0.927' '67.1' '0.715' '-0.162' '0.8']\n",
      " ['10.358' '0.943' '68' '0.755' '-0.186' '0.876']\n",
      " ['10.217' '0.924' '70.799' '0.754' '-0.118' '0.939']\n",
      " ['9.59' '0.87' '68.098' '0.706' '0.113' '0.931']\n",
      " ['9.94' '0.858' '68.699' '0.708' '-0.034' '0.812']\n",
      " ['10.016' '0.931' '67' '0.788' '-0.096' '0.932']\n",
      " ['9.52' '0.697' '68.999' '0.785' '-0.03' '0.901']\n",
      " ['9.693' '0.805' '65.474' '0.751' '0.038' '0.905']\n",
      " ['8.836' '0.918' '65.255' '0.97' '0.311' '0.515']\n",
      " ['10.155' '0.952' '65.2' '0.853' '-0.069' '0.733']\n",
      " ['9.454' '0.857' '65.699' '0.822' '-0.079' '0.918']\n",
      " ['8.538' '0.893' '64.401' '0.935' '0.119' '0.908']\n",
      " ['9.853' '0.91' '66.253' '0.65' '-0.18' '0.627']\n",
      " ['10.189' '0.903' '64.703' '0.718' '-0.111' '0.845']\n",
      " ['8.091' '0.86' '64.281' '0.832' '-0.056' '0.553']\n",
      " ['9.487' '0.799' '67.055' '0.825' '-0.168' '0.629']\n",
      " ['9.569' '0.836' '65.656' '0.814' '-0.223' '0.506']\n",
      " ['9.629' '0.983' '62.409' '0.877' '0.273' '0.888']\n",
      " ['9.585' '0.671' '64.3' '0.783' '-0.238' '0.655']\n",
      " ['9.436' '0.888' '64.902' '0.724' '-0.011' '0.924']\n",
      " ['10.871' '0.898' '69.6' '0.784' '-0.07' '0.721']\n",
      " ['10.611' '0.884' '75.1' '0.796' '-0.258' '0.638']\n",
      " ['10.651' '0.799' '73.9' '0.672' '-0.083' '0.727']\n",
      " ['9.4' '0.935' '62.5' '0.708' '0.116' '0.856']\n",
      " ['11' '0.836' '76.82' '0.717' '0.067' '0.403']\n",
      " ['9.673' '0.811' '69.593' '0.904' '-0.146' '0.755']\n",
      " ['9.88' '0.891' '71.4' '0.934' '-0.126' '0.809']\n",
      " ['9.053' '0.813' '64.958' '0.906' '-0.038' '0.775']\n",
      " ['9.966' '0.925' '69.1' '0.896' '-0.092' '0.59']\n",
      " ['9.577' '0.882' '66.601' '0.804' '-0.071' '0.756']\n",
      " ['9.859' '0.831' '68.597' '0.862' '-0.147' '0.799']\n",
      " ['9.186' '0.877' '67.5' '0.89' '-0.137' '0.884']\n",
      " ['10.35' '0.896' '69.652' '0.872' '-0.166' '0.856']\n",
      " ['10.071' '0.882' '70' '0.742' '-0.044' '0.83']\n",
      " ['9.054' '0.762' '66.402' '0.888' '-0.11' '0.688']\n",
      " ['9.557' '0.847' '68.001' '0.837' '-0.135' '0.841']\n",
      " ['8.62' '0.864' '67.657' '0.836' '0.02' '0.664']\n",
      " ['9.962' '0.898' '69' '0.828' '-0.182' '0.834']\n",
      " ['8.648' '0.812' '67.3' '0.857' '0.081' '0.809']\n",
      " ['9.458' '0.832' '68.25' '0.822' '-0.154' '0.891']\n",
      " ['9.313' '0.821' '68.8' '0.842' '-0.124' '0.843']\n",
      " ['9.046' '0.81' '63.901' '0.875' '-0.077' '0.839']\n",
      " ['9.448' '0.893' '65.9' '0.876' '0.028' '0.882']\n",
      " ['9.802' '0.853' '66.102' '0.86' '-0.133' '0.714']\n",
      " ['9.073' '0.861' '66.7' '0.615' '-0.169' '0.827']\n",
      " ['7.477' '0.54' '55.7' '0.593' '0.422' '0.721']\n",
      " ['10.575' '0.939' '73.503' '0.8' '0.031' '0.753']\n",
      " ['10.669' '0.862' '69.495' '0.925' '0.089' '0.722']\n",
      " ['11.085' '0.844' '67.333' '0.932' '0.074' '0.589']\n",
      " ['10.743' '0.891' '66.603' '0.877' '-0.149' '0.684']\n",
      " ['10.817' '0.843' '66.9' '0.867' '-0.104' '0.736']\n",
      " ['9.622' '0.827' '62.3' '0.771' '-0.087' '0.667']\n",
      " ['10.24' '0.822' '67.199' '0.576' '-0.139' '0.776']\n",
      " ['8.903' '0.56' '66.208' '0.774' '-0.236' '0.801']\n",
      " ['9.342' '0.802' '66.005' '0.48' '-0.067' '0.752']\n",
      " ['9.24' '0.746' '60.583' '0.63' '-0.053' '0.875']\n",
      " ['9.584' '0.71' '66.3' '0.608' '0.218' '0.714']\n",
      " ['9.266' '0.691' '67.201' '0.656' '-0.201' '0.87']\n",
      " ['9.626' '0.848' '67.355' '0.525' '-0.073' '0.898']\n",
      " ['8.485' '0.826' '62.25' '0.653' '-0.163' '0.821']\n",
      " ['9.182' '0.767' '67' '0.755' '-0.167' '0.705']\n",
      " ['9.367' '0.75' '61.998' '0.749' '-0.182' '0.795']\n",
      " ['7.578' '0.832' '57.122' '0.602' '-0.147' '0.8']\n",
      " ['10.643' '0.948' '73.4' '0.929' '0.134' '0.242']\n",
      " ['10.796' '0.94' '73.9' '0.914' '0.159' '0.442']\n",
      " ['10.776' '0.926' '73.8' '0.915' '0.089' '0.415']\n",
      " ['11.023' '0.92' '68.2' '0.837' '0.098' '0.698']\n",
      " ['8.12' '0.774' '64.233' '0.782' '0.152' '0.727']\n",
      " ['9.826' '0.913' '70.6' '0.854' '0.024' '0.825']\n",
      " ['8.454' '0.693' '64.8' '0.877' '-0.041' '0.682']\n",
      " ['8.458' '0.651' '58.709' '0.726' '0.098' '0.787']\n",
      " ['9.47' '0.827' '67.299' '0.841' '0.079' '0.863']\n",
      " ['8.755' '0.603' '60.633' '0.893' '0.089' '0.774']\n",
      " ['7.695' '0.463' '52.493' '0.382' '-0.102' '0.924']\n",
      " ['11.488' '0.915' '76.953' '0.927' '-0.018' '0.082']\n",
      " ['9.805' '0.888' '67.401' '0.884' '0.287' '0.895']\n",
      " ['9.076' '0.83' '62' '0.917' '-0.097' '0.742']\n",
      " ['8.973' '0.85' '68.034' '0.94' '-0.098' '0.796']\n",
      " ['10.238' '0.817' '67.102' '0.895' '0.125' '0.839']\n",
      " ['9.365' '0.811' '62.236' '0.873' '0.542' '0.867']\n",
      " ['8.947' '0.728' '58.968' '0.91' '0.123' '0.658']\n",
      " ['8.36' '0.765' '62' '0.959' '0.034' '0.843']\n",
      " ['8.541' '0.779' '59.302' '0.876' '0.509' '0.66']\n",
      " ['10.008' '0.905' '66.701' '0.867' '-0.054' '0.789']\n",
      " ['8.117' '0.636' '58.221' '0.695' '-0.068' '0.745']\n",
      " ['8.551' '0.644' '50.114' '0.741' '-0.016' '0.794']\n",
      " ['8.189' '0.71' '53.515' '0.731' '0.026' '0.848']\n",
      " ['8.118' '0.71' '59.802' '0.695' '-0.046' '0.801']\n",
      " ['8.58' '0.727' '57.586' '0.807' '0.123' '0.848']\n",
      " ['7.098' '0.641' '53.78' '0.806' '0.018' '0.693']\n",
      " ['7.686' '0.69' '55.16' '0.697' '0.424' '0.746']\n",
      " ['8.087' '0.489' '54.713' '0.757' '-0.034' '0.661']\n",
      " ['7.838' '0.639' '55.008' '0.697' '0.095' '0.766']\n",
      " ['9.403' '0.86' '56.904' '0.749' '-0.067' '0.86']\n",
      " ['9.603' '0.776' '59.962' '0.731' '-0.2' '0.84']\n",
      " ['7.678' '0.672' '54.151' '0.695' '-0.009' '0.748']\n",
      " ['7.158' '0.744' '54.706' '0.882' '0.061' '0.684']\n",
      " ['8.533' '0.74' '50.102' '0.737' '0.037' '0.878']\n",
      " ['7.744' '0.724' '51.969' '0.697' '-0.036' '0.827']\n",
      " ['7.677' '0.781' '56.101' '0.709' '0.122' '0.855']\n",
      " ['7.288' '0.72' '56.498' '0.735' '0.05' '0.85']\n",
      " ['8.361' '0.688' '60.704' '0.779' '0.287' '0.825']\n",
      " ['9.161' '0.818' '56.799' '0.719' '-0.149' '0.847']\n",
      " ['7.364' '0.619' '48.478' '0.579' '0.041' '0.807']\n",
      " ['9.065' '0.77' '50.833' '0.647' '-0.185' '0.708']\n",
      " ['8.031' '0.626' '57.349' '0.548' '0.082' '0.781']\n",
      " ['7.694' '0.764' '59' '0.752' '0.082' '0.761']\n",
      " ['8.542' '0.795' '57.161' '0.561' '-0.106' '0.731']\n",
      " ['7.396' '0.686' '59.305' '0.552' '-0.005' '0.803']\n",
      " ['7.362' '0.569' '54.914' '0.619' '0.032' '0.772']\n",
      " ['8.145' '0.708' '55.809' '0.782' '0.061' '0.823']\n",
      " ['7.434' '0.63' '51.651' '0.717' '0.084' '0.866']\n",
      " ['6.635' '0.49' '53.4' '0.626' '-0.024' '0.607']\n",
      " ['7.876' '0.702' '57.999' '0.833' '0.183' '0.577']\n",
      " ['6.958' '0.537' '57.948' '0.78' '0.038' '0.729']\n",
      " ['7.926' '0.787' '48.7' '0.715' '-0.131' '0.915']\n",
      " ['9.782' '0.784' '59.269' '0.824' '-0.246' '0.801']\n",
      " ['7.676' '0.552' '61.4' '0.897' '0.061' '0.167']\n",
      " ['7.943' '0.75' '56.201' '0.677' '-0.047' '0.821']\n",
      " ['10.775' '0.954' '72' '0.949' '-0.098' '0.186']\n",
      " ['10.933' '0.954' '72.7' '0.946' '0.03' '0.179']\n",
      " ['11.117' '0.942' '74.4' '0.919' '0.025' '0.292']\n",
      " ['10.878' '0.983' '73' '0.955' '0.16' '0.673']\n",
      " ['10.932' '0.942' '72.4' '0.913' '0.175' '0.338']\n",
      " ['11.053' '0.954' '73.3' '0.96' '0.093' '0.27']\n",
      " ['10.867' '0.934' '72.7' '0.945' '0.086' '0.237']\n",
      " ['11.647' '0.908' '72.6' '0.907' '-0.034' '0.386']\n",
      " ['10.906' '0.934' '73.3' '0.908' '0.042' '0.481']\n",
      " ['10.873' '0.903' '72.5' '0.875' '0.011' '0.46']\n",
      " ['11.342' '0.947' '72.4' '0.879' '0.077' '0.363']\n",
      " ['10.707' '0.934' '72.5' '0.859' '0.233' '0.459']\n",
      " ['10.823' '0.906' '72.199' '0.783' '-0.153' '0.646']\n",
      " ['10.704' '0.942' '74' '0.822' '-0.147' '0.571']\n",
      " ['10.674' '0.931' '72.2' '0.927' '0.133' '0.653']\n",
      " ['10.571' '0.932' '74.7' '0.761' '-0.081' '0.745']\n",
      " ['10.623' '0.88' '73.8' '0.693' '-0.084' '0.866']\n",
      " ['10.576' '0.802' '73.898' '0.763' '-0.015' '0.844']\n",
      " ['10.421' '0.879' '72.6' '0.892' '-0.244' '0.887']\n",
      " ['10.279' '0.823' '72.6' '0.582' '-0.288' '0.823']\n",
      " ['10.576' '0.82' '73.898' '0.795' '0.012' '0.626']]\n"
     ]
    }
   ],
   "source": [
    "ind_data = np.hstack([ind_02, ind_01])\n",
    "print(ind_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "201c504a",
   "metadata": {},
   "source": [
    "d. Increase the GDP per capita values in *ind_data* by 10%"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "b474e875",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[['11.611' '0.947' '70.807' '0.858' '-0.208' '0.868']\n",
      " ['11.581' '0.948' '71.4' '0.949' '-0.101' '0.806']\n",
      " ['10.249' '0.821' '63.813' '0.869' '0.257' '0.917']\n",
      " ['11.405' '0.936' '69.201' '0.766' '-0.124' '0.911']\n",
      " ['11.548' '0.935' '67.906' '0.773' '-0.203' '0.826']\n",
      " ['11.529' '0.941' '68.8' '0.909' '-0.106' '0.527']\n",
      " ['11.420' '0.898' '69.702' '0.841' '-0.165' '0.735']\n",
      " ['11.312' '0.832' '67.355' '0.845' '-0.219' '0.938']\n",
      " ['10.765' '0.873' '68.6' '0.778' '0.002' '0.835']\n",
      " ['11.346' '0.927' '67.1' '0.715' '-0.162' '0.8']\n",
      " ['11.393' '0.943' '68' '0.755' '-0.186' '0.876']\n",
      " ['11.238' '0.924' '70.799' '0.754' '-0.118' '0.939']\n",
      " ['10.549' '0.87' '68.098' '0.706' '0.113' '0.931']\n",
      " ['10.934' '0.858' '68.699' '0.708' '-0.034' '0.812']\n",
      " ['11.017' '0.931' '67' '0.788' '-0.096' '0.932']\n",
      " ['10.472' '0.697' '68.999' '0.785' '-0.03' '0.901']\n",
      " ['10.662' '0.805' '65.474' '0.751' '0.038' '0.905']\n",
      " ['9.7196' '0.918' '65.255' '0.97' '0.311' '0.515']\n",
      " ['11.170' '0.952' '65.2' '0.853' '-0.069' '0.733']\n",
      " ['10.399' '0.857' '65.699' '0.822' '-0.079' '0.918']\n",
      " ['9.3918' '0.893' '64.401' '0.935' '0.119' '0.908']\n",
      " ['10.838' '0.91' '66.253' '0.65' '-0.18' '0.627']\n",
      " ['11.207' '0.903' '64.703' '0.718' '-0.111' '0.845']\n",
      " ['8.9001' '0.86' '64.281' '0.832' '-0.056' '0.553']\n",
      " ['10.435' '0.799' '67.055' '0.825' '-0.168' '0.629']\n",
      " ['10.525' '0.836' '65.656' '0.814' '-0.223' '0.506']\n",
      " ['10.591' '0.983' '62.409' '0.877' '0.273' '0.888']\n",
      " ['10.543' '0.671' '64.3' '0.783' '-0.238' '0.655']\n",
      " ['10.379' '0.888' '64.902' '0.724' '-0.011' '0.924']\n",
      " ['11.958' '0.898' '69.6' '0.784' '-0.07' '0.721']\n",
      " ['11.672' '0.884' '75.1' '0.796' '-0.258' '0.638']\n",
      " ['11.716' '0.799' '73.9' '0.672' '-0.083' '0.727']\n",
      " ['10.340' '0.935' '62.5' '0.708' '0.116' '0.856']\n",
      " ['12.100' '0.836' '76.82' '0.717' '0.067' '0.403']\n",
      " ['10.640' '0.811' '69.593' '0.904' '-0.146' '0.755']\n",
      " ['10.868' '0.891' '71.4' '0.934' '-0.126' '0.809']\n",
      " ['9.9583' '0.813' '64.958' '0.906' '-0.038' '0.775']\n",
      " ['10.962' '0.925' '69.1' '0.896' '-0.092' '0.59']\n",
      " ['10.534' '0.882' '66.601' '0.804' '-0.071' '0.756']\n",
      " ['10.844' '0.831' '68.597' '0.862' '-0.147' '0.799']\n",
      " ['10.104' '0.877' '67.5' '0.89' '-0.137' '0.884']\n",
      " ['11.385' '0.896' '69.652' '0.872' '-0.166' '0.856']\n",
      " ['11.078' '0.882' '70' '0.742' '-0.044' '0.83']\n",
      " ['9.9594' '0.762' '66.402' '0.888' '-0.11' '0.688']\n",
      " ['10.512' '0.847' '68.001' '0.837' '-0.135' '0.841']\n",
      " ['9.482' '0.864' '67.657' '0.836' '0.02' '0.664']\n",
      " ['10.958' '0.898' '69' '0.828' '-0.182' '0.834']\n",
      " ['9.5128' '0.812' '67.3' '0.857' '0.081' '0.809']\n",
      " ['10.403' '0.832' '68.25' '0.822' '-0.154' '0.891']\n",
      " ['10.244' '0.821' '68.8' '0.842' '-0.124' '0.843']\n",
      " ['9.9506' '0.81' '63.901' '0.875' '-0.077' '0.839']\n",
      " ['10.392' '0.893' '65.9' '0.876' '0.028' '0.882']\n",
      " ['10.782' '0.853' '66.102' '0.86' '-0.133' '0.714']\n",
      " ['9.9803' '0.861' '66.7' '0.615' '-0.169' '0.827']\n",
      " ['8.2247' '0.54' '55.7' '0.593' '0.422' '0.721']\n",
      " ['11.632' '0.939' '73.503' '0.8' '0.031' '0.753']\n",
      " ['11.735' '0.862' '69.495' '0.925' '0.089' '0.722']\n",
      " ['12.193' '0.844' '67.333' '0.932' '0.074' '0.589']\n",
      " ['11.817' '0.891' '66.603' '0.877' '-0.149' '0.684']\n",
      " ['11.898' '0.843' '66.9' '0.867' '-0.104' '0.736']\n",
      " ['10.584' '0.827' '62.3' '0.771' '-0.087' '0.667']\n",
      " ['11.264' '0.822' '67.199' '0.576' '-0.139' '0.776']\n",
      " ['9.7933' '0.56' '66.208' '0.774' '-0.236' '0.801']\n",
      " ['10.276' '0.802' '66.005' '0.48' '-0.067' '0.752']\n",
      " ['10.164' '0.746' '60.583' '0.63' '-0.053' '0.875']\n",
      " ['10.542' '0.71' '66.3' '0.608' '0.218' '0.714']\n",
      " ['10.192' '0.691' '67.201' '0.656' '-0.201' '0.87']\n",
      " ['10.588' '0.848' '67.355' '0.525' '-0.073' '0.898']\n",
      " ['9.3335' '0.826' '62.25' '0.653' '-0.163' '0.821']\n",
      " ['10.100' '0.767' '67' '0.755' '-0.167' '0.705']\n",
      " ['10.303' '0.75' '61.998' '0.749' '-0.182' '0.795']\n",
      " ['8.3358' '0.832' '57.122' '0.602' '-0.147' '0.8']\n",
      " ['11.707' '0.948' '73.4' '0.929' '0.134' '0.242']\n",
      " ['11.875' '0.94' '73.9' '0.914' '0.159' '0.442']\n",
      " ['11.853' '0.926' '73.8' '0.915' '0.089' '0.415']\n",
      " ['12.125' '0.92' '68.2' '0.837' '0.098' '0.698']\n",
      " ['8.932' '0.774' '64.233' '0.782' '0.152' '0.727']\n",
      " ['10.808' '0.913' '70.6' '0.854' '0.024' '0.825']\n",
      " ['9.2994' '0.693' '64.8' '0.877' '-0.041' '0.682']\n",
      " ['9.3038' '0.651' '58.709' '0.726' '0.098' '0.787']\n",
      " ['10.417' '0.827' '67.299' '0.841' '0.079' '0.863']\n",
      " ['9.6305' '0.603' '60.633' '0.893' '0.089' '0.774']\n",
      " ['8.4645' '0.463' '52.493' '0.382' '-0.102' '0.924']\n",
      " ['12.636' '0.915' '76.953' '0.927' '-0.018' '0.082']\n",
      " ['10.785' '0.888' '67.401' '0.884' '0.287' '0.895']\n",
      " ['9.9836' '0.83' '62' '0.917' '-0.097' '0.742']\n",
      " ['9.8703' '0.85' '68.034' '0.94' '-0.098' '0.796']\n",
      " ['11.261' '0.817' '67.102' '0.895' '0.125' '0.839']\n",
      " ['10.301' '0.811' '62.236' '0.873' '0.542' '0.867']\n",
      " ['9.8417' '0.728' '58.968' '0.91' '0.123' '0.658']\n",
      " ['9.196' '0.765' '62' '0.959' '0.034' '0.843']\n",
      " ['9.3951' '0.779' '59.302' '0.876' '0.509' '0.66']\n",
      " ['11.008' '0.905' '66.701' '0.867' '-0.054' '0.789']\n",
      " ['8.9287' '0.636' '58.221' '0.695' '-0.068' '0.745']\n",
      " ['9.4061' '0.644' '50.114' '0.741' '-0.016' '0.794']\n",
      " ['9.0079' '0.71' '53.515' '0.731' '0.026' '0.848']\n",
      " ['8.9298' '0.71' '59.802' '0.695' '-0.046' '0.801']\n",
      " ['9.438' '0.727' '57.586' '0.807' '0.123' '0.848']\n",
      " ['7.8078' '0.641' '53.78' '0.806' '0.018' '0.693']\n",
      " ['8.4546' '0.69' '55.16' '0.697' '0.424' '0.746']\n",
      " ['8.8957' '0.489' '54.713' '0.757' '-0.034' '0.661']\n",
      " ['8.6218' '0.639' '55.008' '0.697' '0.095' '0.766']\n",
      " ['10.343' '0.86' '56.904' '0.749' '-0.067' '0.86']\n",
      " ['10.563' '0.776' '59.962' '0.731' '-0.2' '0.84']\n",
      " ['8.4458' '0.672' '54.151' '0.695' '-0.009' '0.748']\n",
      " ['7.8738' '0.744' '54.706' '0.882' '0.061' '0.684']\n",
      " ['9.3863' '0.74' '50.102' '0.737' '0.037' '0.878']\n",
      " ['8.5184' '0.724' '51.969' '0.697' '-0.036' '0.827']\n",
      " ['8.4447' '0.781' '56.101' '0.709' '0.122' '0.855']\n",
      " ['8.0168' '0.72' '56.498' '0.735' '0.05' '0.85']\n",
      " ['9.1971' '0.688' '60.704' '0.779' '0.287' '0.825']\n",
      " ['10.077' '0.818' '56.799' '0.719' '-0.149' '0.847']\n",
      " ['8.1004' '0.619' '48.478' '0.579' '0.041' '0.807']\n",
      " ['9.9715' '0.77' '50.833' '0.647' '-0.185' '0.708']\n",
      " ['8.8341' '0.626' '57.349' '0.548' '0.082' '0.781']\n",
      " ['8.4634' '0.764' '59' '0.752' '0.082' '0.761']\n",
      " ['9.3962' '0.795' '57.161' '0.561' '-0.106' '0.731']\n",
      " ['8.1356' '0.686' '59.305' '0.552' '-0.005' '0.803']\n",
      " ['8.0982' '0.569' '54.914' '0.619' '0.032' '0.772']\n",
      " ['8.9595' '0.708' '55.809' '0.782' '0.061' '0.823']\n",
      " ['8.1774' '0.63' '51.651' '0.717' '0.084' '0.866']\n",
      " ['7.2985' '0.49' '53.4' '0.626' '-0.024' '0.607']\n",
      " ['8.6636' '0.702' '57.999' '0.833' '0.183' '0.577']\n",
      " ['7.6538' '0.537' '57.948' '0.78' '0.038' '0.729']\n",
      " ['8.7186' '0.787' '48.7' '0.715' '-0.131' '0.915']\n",
      " ['10.760' '0.784' '59.269' '0.824' '-0.246' '0.801']\n",
      " ['8.4436' '0.552' '61.4' '0.897' '0.061' '0.167']\n",
      " ['8.7373' '0.75' '56.201' '0.677' '-0.047' '0.821']\n",
      " ['11.852' '0.954' '72' '0.949' '-0.098' '0.186']\n",
      " ['12.026' '0.954' '72.7' '0.946' '0.03' '0.179']\n",
      " ['12.228' '0.942' '74.4' '0.919' '0.025' '0.292']\n",
      " ['11.965' '0.983' '73' '0.955' '0.16' '0.673']\n",
      " ['12.025' '0.942' '72.4' '0.913' '0.175' '0.338']\n",
      " ['12.158' '0.954' '73.3' '0.96' '0.093' '0.27']\n",
      " ['11.953' '0.934' '72.7' '0.945' '0.086' '0.237']\n",
      " ['12.811' '0.908' '72.6' '0.907' '-0.034' '0.386']\n",
      " ['11.996' '0.934' '73.3' '0.908' '0.042' '0.481']\n",
      " ['11.960' '0.903' '72.5' '0.875' '0.011' '0.46']\n",
      " ['12.476' '0.947' '72.4' '0.879' '0.077' '0.363']\n",
      " ['11.777' '0.934' '72.5' '0.859' '0.233' '0.459']\n",
      " ['11.905' '0.906' '72.199' '0.783' '-0.153' '0.646']\n",
      " ['11.774' '0.942' '74' '0.822' '-0.147' '0.571']\n",
      " ['11.741' '0.931' '72.2' '0.927' '0.133' '0.653']\n",
      " ['11.628' '0.932' '74.7' '0.761' '-0.081' '0.745']\n",
      " ['11.685' '0.88' '73.8' '0.693' '-0.084' '0.866']\n",
      " ['11.633' '0.802' '73.898' '0.763' '-0.015' '0.844']\n",
      " ['11.463' '0.879' '72.6' '0.892' '-0.244' '0.887']\n",
      " ['11.306' '0.823' '72.6' '0.582' '-0.288' '0.823']\n",
      " ['11.633' '0.82' '73.898' '0.795' '0.012' '0.626']]\n"
     ]
    }
   ],
   "source": [
    "ind_data[:,0] = ind_data[:,0].astype(\"float\") * 1.1\n",
    "print(ind_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a056120",
   "metadata": {},
   "source": [
    "e. Display the names of the countries in Latin America and Caribbean"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "921c4017",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(array([  3,  13,  16,  24,  26,  29,  34,  35,  37,  48,  50,  51,  63,\n",
      "        87,  98, 106, 107, 108, 142, 144], dtype=int64),)\n",
      "The countries in Latin America and Caribbean are [['Argentina' 'Bolivia' 'Brazil' 'Chile' 'Colombia' 'Costa Rica'\n",
      "  'Dominican Republic' 'Ecuador' 'El Salvador' 'Guatemala' 'Haiti'\n",
      "  'Honduras' 'Jamaica' 'Mexico' 'Nicaragua' 'Panama' 'Paraguay' 'Peru'\n",
      "  'Uruguay' 'Venezuela']]\n"
     ]
    }
   ],
   "source": [
    "ind = np.where(countries[:,0] == \"Latin America and Caribbean\")\n",
    "print(ind)\n",
    "print(f\"The countries in Latin America and Caribbean are {countries[ind,1]}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4e0c0712",
   "metadata": {},
   "source": [
    "f. Display the healthy life expectancy values for the countries in Latin America and Caribbean"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "5524e1d0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[['69.201' '68.699' '65.474' '67.055' '62.409' '69.6' '69.593' '71.4'\n",
      "  '69.1' '68.25' '63.901' '65.9' '66.005' '67.102' '53.78' '50.102'\n",
      "  '51.969' '56.101' '72.2' '73.8']]\n"
     ]
    }
   ],
   "source": [
    "expectancy = ind_01[ind,1]\n",
    "print(expectancy)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37ca28d8",
   "metadata": {},
   "source": [
    "g. Find and display the mean life expectancy value for all countries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "002582b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "64.99279865771811\n"
     ]
    }
   ],
   "source": [
    "\n",
    "mean_of = np.mean(ind_data[:,2].astype(\"float\"))\n",
    "print(mean_of)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "90b72659",
   "metadata": {},
   "source": [
    "h. Find the countries above average life expectancy and store them as countries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "dacdaac5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[['Afghanistan' 'Albania' 'Argentina' 'Armenia' 'Australia' 'Austria'\n",
      "  'Azerbaijan' 'Bahrain' 'Bangladesh' 'Belarus' 'Belgium' 'Benin'\n",
      "  'Bolivia' 'Bosnia and Herzegovina' 'Botswana' 'Brazil' 'Bulgaria'\n",
      "  'Burkina Faso' 'Burundi' 'Cameroon' 'Chile' 'China' 'Costa Rica'\n",
      "  'Croatia' 'Cyprus' 'Denmark' 'Dominican Republic' 'Ecuador'\n",
      "  'El Salvador' 'Estonia' 'Ethiopia' 'Finland' 'France' 'Gabon' 'Gambia'\n",
      "  'Georgia' 'Germany' 'Ghana' 'Greece' 'Guatemala' 'Guinea' 'Honduras'\n",
      "  'Hong Kong S.A.R. of China' 'Hungary' 'India' 'Indonesia' 'Iran' 'Iraq'\n",
      "  'Ireland' 'Italy' 'Ivory Coast' 'Jamaica' 'Jordan' 'Kazakhstan' 'Kenya'\n",
      "  'Kuwait' 'Latvia' 'Lebanon' 'Lesotho' 'Liberia' 'Lithuania' 'Malawi'\n",
      "  'Mali' 'Malta' 'Mauritius' 'Mexico' 'Mozambique' 'Switzerland'\n",
      "  'Taiwan Province of China' 'Tajikistan' 'Tanzania' 'Thailand' 'Togo'\n",
      "  'Tunisia' 'Turkey' 'Turkmenistan' 'Uganda' 'Ukraine'\n",
      "  'United Arab Emirates' 'United Kingdom' 'United States' 'Uruguay'\n",
      "  'Uzbekistan' 'Venezuela' 'Vietnam' 'Yemen' 'Zambia' 'Zimbabwe']]\n"
     ]
    }
   ],
   "source": [
    "above_exp = np.where(ind_data[:,2].astype(\"float\")> mean_of)\n",
    "countries = country[above_exp,1]\n",
    "print(above_countries)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce48caf1",
   "metadata": {},
   "source": [
    "i.  Find the life expectancy of the countries above average life expectancy and store them as life"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "f033fe31",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[['70.807' '71.4' '69.201' '67.906' '68.8' '69.702' '67.355' '68.6'\n",
      "  '67.1' '68' '70.799' '68.098' '68.699' '67' '68.999' '65.474' '65.255'\n",
      "  '65.2' '65.699' '66.253' '67.055' '65.656' '69.6' '75.1' '73.9' '76.82'\n",
      "  '69.593' '71.4' '69.1' '66.601' '68.597' '67.5' '69.652' '70' '66.402'\n",
      "  '68.001' '67.657' '69' '67.3' '68.25' '68.8' '65.9' '66.102' '66.7'\n",
      "  '73.503' '69.495' '67.333' '66.603' '66.9' '67.199' '66.208' '66.005'\n",
      "  '66.3' '67.201' '67.355' '67' '73.4' '73.9' '73.8' '68.2' '70.6'\n",
      "  '67.299' '76.953' '67.401' '68.034' '67.102' '66.701' '72' '72.7'\n",
      "  '74.4' '73' '72.4' '73.3' '72.7' '72.6' '73.3' '72.5' '72.4' '72.5'\n",
      "  '72.199' '74' '72.2' '74.7' '73.8' '73.898' '72.6' '72.6' '73.898']]\n"
     ]
    }
   ],
   "source": [
    "life = ind_data[above_exp,2]\n",
    "print(life)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5855341",
   "metadata": {},
   "source": [
    "j. Create a two dimensional array life_data where the first column contains the names of the countries with life expentancy above average life expectancy and the second column is the life expectancy of those countries."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "0460d541",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "life_data= np.hstack([countries.reshape(88,1),life.reshape(88,1)])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fecd916a",
   "metadata": {},
   "source": [
    "k. Display the countries and their life expectancy (life_data) from step j."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "5d3635b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[['Afghanistan' '70.807']\n",
      " ['Albania' '71.4']\n",
      " ['Argentina' '69.201']\n",
      " ['Armenia' '67.906']\n",
      " ['Australia' '68.8']\n",
      " ['Austria' '69.702']\n",
      " ['Azerbaijan' '67.355']\n",
      " ['Bahrain' '68.6']\n",
      " ['Bangladesh' '67.1']\n",
      " ['Belarus' '68']\n",
      " ['Belgium' '70.799']\n",
      " ['Benin' '68.098']\n",
      " ['Bolivia' '68.699']\n",
      " ['Bosnia and Herzegovina' '67']\n",
      " ['Botswana' '68.999']\n",
      " ['Brazil' '65.474']\n",
      " ['Bulgaria' '65.255']\n",
      " ['Burkina Faso' '65.2']\n",
      " ['Burundi' '65.699']\n",
      " ['Cameroon' '66.253']\n",
      " ['Chile' '67.055']\n",
      " ['China' '65.656']\n",
      " ['Costa Rica' '69.6']\n",
      " ['Croatia' '75.1']\n",
      " ['Cyprus' '73.9']\n",
      " ['Denmark' '76.82']\n",
      " ['Dominican Republic' '69.593']\n",
      " ['Ecuador' '71.4']\n",
      " ['El Salvador' '69.1']\n",
      " ['Estonia' '66.601']\n",
      " ['Ethiopia' '68.597']\n",
      " ['Finland' '67.5']\n",
      " ['France' '69.652']\n",
      " ['Gabon' '70']\n",
      " ['Gambia' '66.402']\n",
      " ['Georgia' '68.001']\n",
      " ['Germany' '67.657']\n",
      " ['Ghana' '69']\n",
      " ['Greece' '67.3']\n",
      " ['Guatemala' '68.25']\n",
      " ['Guinea' '68.8']\n",
      " ['Honduras' '65.9']\n",
      " ['Hong Kong S.A.R. of China' '66.102']\n",
      " ['Hungary' '66.7']\n",
      " ['India' '73.503']\n",
      " ['Indonesia' '69.495']\n",
      " ['Iran' '67.333']\n",
      " ['Iraq' '66.603']\n",
      " ['Ireland' '66.9']\n",
      " ['Italy' '67.199']\n",
      " ['Ivory Coast' '66.208']\n",
      " ['Jamaica' '66.005']\n",
      " ['Jordan' '66.3']\n",
      " ['Kazakhstan' '67.201']\n",
      " ['Kenya' '67.355']\n",
      " ['Kuwait' '67']\n",
      " ['Latvia' '73.4']\n",
      " ['Lebanon' '73.9']\n",
      " ['Lesotho' '73.8']\n",
      " ['Liberia' '68.2']\n",
      " ['Lithuania' '70.6']\n",
      " ['Malawi' '67.299']\n",
      " ['Mali' '76.953']\n",
      " ['Malta' '67.401']\n",
      " ['Mauritius' '68.034']\n",
      " ['Mexico' '67.102']\n",
      " ['Mozambique' '66.701']\n",
      " ['Switzerland' '72']\n",
      " ['Taiwan Province of China' '72.7']\n",
      " ['Tajikistan' '74.4']\n",
      " ['Tanzania' '73']\n",
      " ['Thailand' '72.4']\n",
      " ['Togo' '73.3']\n",
      " ['Tunisia' '72.7']\n",
      " ['Turkey' '72.6']\n",
      " ['Turkmenistan' '73.3']\n",
      " ['Uganda' '72.5']\n",
      " ['Ukraine' '72.4']\n",
      " ['United Arab Emirates' '72.5']\n",
      " ['United Kingdom' '72.199']\n",
      " ['United States' '74']\n",
      " ['Uruguay' '72.2']\n",
      " ['Uzbekistan' '74.7']\n",
      " ['Venezuela' '73.8']\n",
      " ['Vietnam' '73.898']\n",
      " ['Yemen' '72.6']\n",
      " ['Zambia' '72.6']\n",
      " ['Zimbabwe' '73.898']]\n"
     ]
    }
   ],
   "source": [
    "print(life_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6640cc3",
   "metadata": {},
   "source": [
    "l. Output the data to a file *above_life_expectancy.txt*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "3578a381",
   "metadata": {},
   "outputs": [],
   "source": [
    "output_data = np.savetxt(\"life_expectancy.txt\",life_data,fmt = \"%s\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc005d2d",
   "metadata": {},
   "source": [
    "m. Display the regions with at least 1 country with GDP per capita over 11 (no duplicates)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "c0ba85aa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Commonwealth of Independent States' 'Middle East and North Africa'\n",
      " 'Sub-Saharan Africa']\n"
     ]
    }
   ],
   "source": [
    "ind_of_region = np.where(ind_02[:,0].astype(\"float\") > 11)\n",
    "regions = country[ind_of_region, 0]\n",
    "print(np.unique(regions))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "50e25df1",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
